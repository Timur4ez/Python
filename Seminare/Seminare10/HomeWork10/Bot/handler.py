from aiogram import types
from aiogram.dispatcher.filters import Text
from random import randint as RI
from config import dp
from my_bot import my_bot

from text import text_1

users = {}


@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, {message.from_user.first_name}!\n \n/game - –ù–∞—á–∞—Ç—å –∏–≥—Ä—É üéÆ  \n/help - –ß–∏—Ç–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞ üëÄ')


@dp.message_handler(commands=['help'])
async def start(message: types.Message):
    await message.answer(text_1)
    await message.answer(f'–£–¢–ß: –ß—Ç–æ–±—ã –∑–∞–¥–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ñ–µ—Ç –≤ –≤–µ–¥–∏—Ç–µ /game "NUM", –≥–¥–µ NUM —ç—Ç–æ –∂–µ–ª–∞–µ–º–æ–µ –∫–æ–ª-–≤–æ üç¨ ')


@dp.message_handler(commands=['game'])
async def start(message: types.Message):

    global users
    candys = 2023

    if len(message.text) != 5 and message.text[5:].replace(' ','').isdigit():
        candys = int(message.text[5:].replace(' ',''))

    users[message.from_user.id] = [candys]
    await message.answer(f'\n–î–∞ –Ω–∞—á–Ω—É—Ç—Å—è –≥–æ–ª–æ–¥–Ω—ã–µ –∏–≥—Ä—ã!\n –ù–∞ —Å—Ç–æ–ª–µ –ª–µ–∂–∏—Ç {users[message.from_user.id][0]} üç¨üç¨üç¨')

    fate = RI(0,1)

    if fate:
        await message.answer(f'–ü–æ –∏—Ç–æ–≥–∞–º –∂–µ—Ä–µ–±—å–µ–≤–∫–∏, –ø–µ—Ä–≤—ã–π —Ö–æ–¥ –∑–∞ —Ç–æ–±–æ–π ü´µ, —Å–∫–æ–ª—å–∫–æ –≤–æ–∑—å–º–µ—à—å üç¨? ')
    else:
        await message.answer(f'–ü–æ –∏—Ç–æ–≥–∞–º –∂–µ—Ä–µ–±—å–µ–≤–∫–∏, –ø–µ—Ä–≤—ã–º —Ö–æ–¥–∏—Ç –±–æ—Ç')
        num = my_bot(users[message.from_user.id][0])
        users[message.from_user.id][0] -= num
        await message.answer(f'–ë–æ—Ç –≤–∑—è–ª {num} üç¨, –Ω–∞ —Å—Ç–æ–ª–µ –æ—Å—Ç–∞–ª–æ—Å—å {users[message.from_user.id][0]} üç¨.')


@dp.message_handler()
async def mes_all(message: types.Message):
    global users


    if message.from_user.id in users:
        if message.text.isdigit(): 
            if 0 < int(message.text) < 29:
                users[message.from_user.id][0] -= int(message.text)
                if users[message.from_user.id][0] > 0:
                    await message.answer(f'–ù–∞ —Å—Ç–æ–ª–µ –æ—Å—Ç–∞–ª–æ—Å—å {users[message.from_user.id][0]} üç¨')
                    num = my_bot(users[message.from_user.id][0])
                    users[message.from_user.id][0] -= num
                    if users[message.from_user.id][0] > 0:
                        await message.answer(f'–ë–æ—Ç –≤–∑—è–ª {num} üç¨, –Ω–∞ —Å—Ç–æ–ª–µ –æ—Å—Ç–∞–ª–æ—Å—å {users[message.from_user.id][0]} üç¨. \n–°–∫–æ–ª—å–∫–æ –≤–æ–∑—å–º–µ—à—å üç¨?')
                    else:

                        await message.answer('... –∏ –∏—Ö –∑–∞–±—Ä–∞–ª –±–æ—Ç! \n–ü–æ–±–µ–¥–∏–ª –±–æ—Ç ü§ñ, –≥—Ä—è–¥–µ—Ç –≤–æ—Å—Å—Ç–∞–Ω–∏–µ –º–∞—à–∏–Ω!')
                        
                else:
                    await message.answer(f'{message.from_user.first_name} –æ–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø–æ–±–µ–¥—ÉüèÜ!')
                    users.pop(message.from_user.id)
            else:
                await message.answer('–ó–∞ —Ä–∞–∑ –º–æ–∂–Ω–æ –≤–∑—è—Ç—å –Ω–µ –±–æ–ª–µ–µ 28 –∫–æ–Ω—Ñ–µ—Ç!')
        else:
            await message.answer(f'–ù–µ –ø–æ–Ω—è–ª, –ø–æ–≤—Ç–æ—Ä–∏')
    else:
        await message.answer('–ù–∞ —Å—Ç–æ–ª–µ –Ω–µ—Ç –∫–æ–Ω—Ñ–µ—Ç. \n–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä–∞—Ç—å –∂–º–∏ /game ')